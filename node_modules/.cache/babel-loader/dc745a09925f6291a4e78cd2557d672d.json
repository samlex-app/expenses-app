{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\ExpensesList.js\";\nimport React from \"react\";\nimport \"./ExpensesList.css\";\nimport ExpenseItem from \"./ExpenseItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst ExpensesList = ({\n  items,\n  setExpenses\n}) => {\n  const deleteHandler = id => {\n    console.log('Deleting item', id);\n    const newItems = items.slice();\n    const newItems2 = items.filter(item => item.id !== id); //const searchResults = items.filter((item) => (item.id === id))\n    // Find item by it's id and remove it\n\n    setExpenses(newItems2);\n  };\n  /*\r\n  index.js:1 Warning: ExpenseItem: `key` is not a prop. Trying to access it will result in `undefined` being returned. \r\n  If you need to access the same value within the child component, you should pass it as a different prop. \r\n  (https://reactjs.org/link/special-props)\r\n  \r\n  */\n\n\n  if (items.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"expenses-list__fallback\",\n      children: \"Found no expenses.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"ul\", {\n    className: \"expenses-list\",\n    children: items.map(expense => /*#__PURE__*/_jsxDEV(ExpenseItem, {\n      title: expense.title,\n      amount: expense.amount,\n      date: expense.date,\n      onDelete: id => deleteHandler(id)\n    }, expense.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n\n_c = ExpensesList;\nexport default ExpensesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExpensesList\");","map":{"version":3,"sources":["C:/dev/01-starting-setup/src/components/Expenses/ExpensesList.js"],"names":["React","ExpenseItem","ExpensesList","items","setExpenses","deleteHandler","id","console","log","newItems","slice","newItems2","filter","item","length","map","expense","title","amount","date"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,oBAAP;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,YAAY,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA;AAAR,CAAD,KAA0B;AAE7C,QAAMC,aAAa,GAAIC,EAAD,IAAQ;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAY,eAAZ,EAA6BF,EAA7B;AAEA,UAAMG,QAAQ,GAAGN,KAAK,CAACO,KAAN,EAAjB;AAEA,UAAMC,SAAS,GAAGR,KAAK,CAACS,MAAN,CAAcC,IAAD,IAAUA,IAAI,CAACP,EAAL,KAAYA,EAAnC,CAAlB,CAL4B,CAO5B;AAEA;;AACAF,IAAAA,WAAW,CAACO,SAAD,CAAX;AACD,GAXD;AAYF;AACA;AACA;AACA;AACA;AACA;;;AAGE,MAAIR,KAAK,CAACW,MAAN,KAAiB,CAArB,EAAwB;AACtB,wBAAO;AAAI,MAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAP;AACD;;AAED,sBACE;AAAI,IAAA,SAAS,EAAC,eAAd;AAAA,cACGX,KAAK,CAACY,GAAN,CAAWC,OAAD,iBACT,QAAC,WAAD;AAEE,MAAA,KAAK,EAAEA,OAAO,CAACC,KAFjB;AAGE,MAAA,MAAM,EAAED,OAAO,CAACE,MAHlB;AAIE,MAAA,IAAI,EAAEF,OAAO,CAACG,IAJhB;AAKE,MAAA,QAAQ,EAAGb,EAAD,IAAQD,aAAa,CAACC,EAAD;AALjC,OACOU,OAAO,CAACV,EADf;AAAA;AAAA;AAAA;AAAA,YADD;AADH;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CAvCD;;KAAMJ,Y;AAyCN,eAAeA,YAAf","sourcesContent":["import React from \"react\";\r\nimport \"./ExpensesList.css\";\r\nimport ExpenseItem from \"./ExpenseItem\";\r\n\r\nconst ExpensesList = ({items, setExpenses}) => {\r\n\r\n  const deleteHandler = (id) => {\r\n    console.log('Deleting item', id)\r\n\r\n    const newItems = items.slice()\r\n\r\n    const newItems2 = items.filter((item) => item.id !== id)\r\n    \r\n    //const searchResults = items.filter((item) => (item.id === id))\r\n    \r\n    // Find item by it's id and remove it\r\n    setExpenses(newItems2)\r\n  };\r\n/*\r\nindex.js:1 Warning: ExpenseItem: `key` is not a prop. Trying to access it will result in `undefined` being returned. \r\nIf you need to access the same value within the child component, you should pass it as a different prop. \r\n(https://reactjs.org/link/special-props)\r\n\r\n*/\r\n\r\n\r\n  if (items.length === 0) {\r\n    return <h2 className=\"expenses-list__fallback\">Found no expenses.</h2>;\r\n  }\r\n\r\n  return (\r\n    <ul className=\"expenses-list\">\r\n      {items.map((expense) => (\r\n        <ExpenseItem\r\n          key={expense.id}\r\n          title={expense.title}\r\n          amount={expense.amount}\r\n          date={expense.date}\r\n          onDelete={(id) => deleteHandler(id)}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ExpensesList;\r\n"]},"metadata":{},"sourceType":"module"}