{"ast":null,"code":"var _jsxFileName = \"C:\\\\dev\\\\01-starting-setup\\\\src\\\\components\\\\Expenses\\\\Expenses.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport \"./Expenses.css\";\nimport Card from \"../UI/Card\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport ExpensesList from \"./ExpensesList\";\nimport ExpensesChart from \"./ExpensesChart\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Expenses = ({\n  items,\n  foo,\n  setExpenses\n}) => {\n  _s();\n\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\n\n  const changeYearHandler = changedYear => {\n    setSelectedYear(changedYear);\n  }; // TODO: change to useEffect or useCallback\n\n\n  const filterByYear = items.filter(expense => {\n    return expense.date.getFullYear().toString() === selectedYear;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      className: \"expenses\",\n      children: [/*#__PURE__*/_jsxDEV(ExpensesFilter, {\n        selected: selectedYear,\n        onChangeYear: changeYearHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesChart, {\n        expenses: filterByYear\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ExpensesList, {\n        items: filterByYear,\n        setExpenses: v => {\n          setExpenses(v);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Expenses, \"3JyZSyd4/ouL28saHC4gke+LBKI=\");\n\n_c = Expenses;\nexport default Expenses;\n\nvar _c;\n\n$RefreshReg$(_c, \"Expenses\");","map":{"version":3,"sources":["C:/dev/01-starting-setup/src/components/Expenses/Expenses.js"],"names":["React","useState","Card","ExpensesFilter","ExpensesList","ExpensesChart","Expenses","items","foo","setExpenses","selectedYear","setSelectedYear","changeYearHandler","changedYear","filterByYear","filter","expense","date","getFullYear","toString","v"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAO,gBAAP;AACA,OAAOC,IAAP,MAAiB,YAAjB;AACA,OAAOC,cAAP,MAA2B,iBAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA,KAAD;AAAQC,EAAAA,GAAR;AAAaC,EAAAA;AAAb,CAAD,KAA+B;AAAA;;AAC9C,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCV,QAAQ,CAAC,MAAD,CAAhD;;AAEA,QAAMW,iBAAiB,GAAIC,WAAD,IAAiB;AACzCF,IAAAA,eAAe,CAACE,WAAD,CAAf;AACD,GAFD,CAH8C,CAO9C;;;AACA,QAAMC,YAAY,GAAGP,KAAK,CAACQ,MAAN,CAAcC,OAAD,IAAa;AAC7C,WAAOA,OAAO,CAACC,IAAR,CAAaC,WAAb,GAA2BC,QAA3B,OAA0CT,YAAjD;AACD,GAFoB,CAArB;AAOA,sBACE;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,EAAC,UAAhB;AAAA,8BACE,QAAC,cAAD;AACE,QAAA,QAAQ,EAAEA,YADZ;AAEE,QAAA,YAAY,EAAEE;AAFhB;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,aAAD;AAAe,QAAA,QAAQ,EAAEE;AAAzB;AAAA;AAAA;AAAA;AAAA,cALF,eAOE,QAAC,YAAD;AAAc,QAAA,KAAK,EAAEA,YAArB;AAAmC,QAAA,WAAW,EAAGM,CAAD,IAAO;AAACX,UAAAA,WAAW,CAACW,CAAD,CAAX;AAAe;AAAvE;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAaD,CA5BD;;GAAMd,Q;;KAAAA,Q;AA8BN,eAAeA,QAAf","sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./Expenses.css\";\r\nimport Card from \"../UI/Card\";\r\nimport ExpensesFilter from \"./ExpenseFilter\";\r\nimport ExpensesList from \"./ExpensesList\";\r\nimport ExpensesChart from \"./ExpensesChart\";\r\n\r\nconst Expenses = ({items, foo, setExpenses}) => {\r\n  const [selectedYear, setSelectedYear] = useState(\"2021\");\r\n\r\n  const changeYearHandler = (changedYear) => {\r\n    setSelectedYear(changedYear);\r\n  };\r\n\r\n  // TODO: change to useEffect or useCallback\r\n  const filterByYear = items.filter((expense) => {\r\n    return expense.date.getFullYear().toString() === selectedYear;\r\n  });\r\n\r\n  \r\n\r\n  \r\n  return (\r\n    <div>\r\n      <Card className=\"expenses\">\r\n        <ExpensesFilter\r\n          selected={selectedYear}\r\n          onChangeYear={changeYearHandler}\r\n        />\r\n        <ExpensesChart expenses={filterByYear} />\r\n\r\n        <ExpensesList items={filterByYear} setExpenses={(v) => {setExpenses(v)}} />\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Expenses;\r\n"]},"metadata":{},"sourceType":"module"}